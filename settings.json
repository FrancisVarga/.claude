{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "env": {},
  "feedbackSurveyState": {
    "lastShownTime": 1754119710932
  },
  "hooks": {},
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(git:*)",
      "Bash(*:*)",
      "Bash",
      "WebFetch",
      "MultiEdit",
      "Edit",
      "Write",
      "WebSearch"
    ],
    "deny": []
  },
  "statusLine": {
    "command": "powershell -NoProfile -ExecutionPolicy Bypass -Command \"[Console]::OutputEncoding = [System.Text.Encoding]::UTF8; $input = if ([Console]::IsInputRedirected) { [Console]::In.ReadToEnd() } else { '{}' }; try { $data = $input | ConvertFrom-Json -ErrorAction SilentlyContinue; if (!$data) { $data = @{} } } catch { $data = @{} }; $model = if ($data.model.display_name) { $data.model.display_name } else { 'Claude' }; $cwd = if ($data.workspace.current_dir) { $data.workspace.current_dir } else { (Get-Location).Path }; $outputStyle = if ($data.output_style.name) { $data.output_style.name } else { 'default' }; $user = $env:USERNAME; $host = $env:COMPUTERNAME; $dirShort = Split-Path $cwd -Leaf; if (!$dirShort) { $dirShort = $cwd }; $time = Get-Date -Format 'HH:mm:ss'; $git = ''; try { if (Test-Path '.git' -PathType Container) { $branch = git branch --show-current 2>$null; if ($LASTEXITCODE -eq 0 -and $branch) { $status = ''; $gitStatus = git status --porcelain 2>$null; if ($gitStatus) { $status = '*' }; $git = ' (' + $branch + $status + ')' } } } catch {}; $esc = [char]27; $reset = \\\"$esc[0m\\\"; $bold = \\\"$esc[1m\\\"; $dim = \\\"$esc[2m\\\"; $green = \\\"$esc[32m\\\"; $blue = \\\"$esc[34m\\\"; $yellow = \\\"$esc[33m\\\"; $magenta = \\\"$esc[35m\\\"; $cyan = \\\"$esc[36m\\\"; $brightGreen = \\\"$esc[92m\\\"; $brightBlue = \\\"$esc[94m\\\"; $brightYellow = \\\"$esc[93m\\\"; $brightMagenta = \\\"$esc[95m\\\"; $line = $bold + $green + $user + '@' + $host + $reset + ':' + $bold + $blue + $dirShort + $reset; if ($git) { $line += $brightYellow + $git + $reset }; $line += ' [' + $brightMagenta + $model + $reset + ' ' + $dim + $time + $reset + ']'; if ($outputStyle -ne 'default') { $line += ' ' + $cyan + $outputStyle + $reset }; Write-Host $line -NoNewline\"",
    "type": "command"
  }
}